#!/bin/bash

TEMP_DEVICE="${BLOCK_INSTANCE:-Core}"
TEMP_OUTPUT=$(sensors | grep "Adapter\|${TEMP_DEVICE}")

IS_URGENT=0

TOTAL_TEMP=0
TOTAL_COUNT=0
while read RESULT_LINE; do
  # N/A for ISA adapter, otherwise everything is 100 all of the time!
  if [[ "${RESULT_LINE}" == "Adapter: ISA adapter" ]]; then
    while read RESULT_LINE; do
      if [[ "${RESULT_LINE}" == "Adpater:*" ]]; then
        break
      fi
    done
    read
    continue
  fi

  TOTAL_COUNT=$((TOTAL_COUNT +1))
  CURRENT_TEMP=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '1p' | tr -d '+°C')
  URGENT_VALUE=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '2p' | tr -d '+°C')

  TOTAL_TEMP=$(echo "scale=2;${TOTAL_TEMP}+${CURRENT_TEMP}" | bc -l)
  IS_CRITICAL=$(echo "scale=0;${CURRENT_TEMP}-${URGENT_VALUE} >= 0" | bc -l)

  if [[ "${IS_CRITICAL}" -eq 1 ]]; then
    IS_URGENT=1
  fi
done <<< "$(echo -e "$TEMP_OUTPUT")"

if [[ "${TOTAL_COUNT}" -gt 0 ]]; then
  AVERAGE_TEMP=$(echo "scale=0;${TOTAL_TEMP}/${TOTAL_COUNT}" | bc -l)

  if [[ "${TOTAL_COUNT}" -gt 1 ]]; then
    AVERAGE_TEMP="${AVERAGE_TEMP}"
  fi

  echo " ${AVERAGE_TEMP}<span font_weight='ultraheavy'>°</span> "
  echo " ${AVERAGE_TEMP}<span font_weight='ultraheavy'>°</span> "
  echo ""

  if [[ "${IS_URGENT}" -eq 1 ]]; then
    exit 33
  fi
else
  echo " N/A<span font_weight='ultraheavy'>°</span> "
  echo " N/A<span font_weight='ultraheavy'>°</span> "
  echo ""
fi

case $BLOCK_BUTTON in
    1) i3-msg exec sense ;; #lm_sensors
esac
